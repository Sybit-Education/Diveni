name: Deploy Diveni

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - 'frontend/**'
      - 'proxy/**'
  workflow_dispatch:

jobs:
  image-backend:
    name: Backend-Docker-Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Verify files changed
        uses: tj-actions/verify-changed-files@v11
        id: files-changed-backend
        with:
          files: backend
      - name: Log in to the Container registry
        if: steps.files-changed-backend.outputs.files_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        if: steps.files-changed-backend.outputs.files_changed == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-backend
          flavor: latest=true
          tags: type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        if: steps.files-changed-backend.outputs.files_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  image-frontend:
    name: Frontend-Docker-Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Verify files changed
        uses: tj-actions/verify-changed-files@v11
        id: files-changed-frontend
        with:
          files: frontend
      - name: Log in to the Container registry
        if: steps.files-changed-frontend.outputs.files_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        if: steps.files-changed-frontend.outputs.files_changed == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-frontend
      - name: Build and push Docker image
        if: steps.files-changed-frontend.outputs.files_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  image-proxy:
    name: Proxy-Docker-Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Verify files changed
        uses: tj-actions/verify-changed-files@v11
        id: files-changed-proxy
        with:
          files: proxy
      - name: Log in to the Container registry
        if: steps.files-changed-proxy.outputs.files_changed == 'true'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        if: steps.files-changed-proxy.outputs.files_changed == 'true'
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-proxy
          flavor: latest=true
          tags: type=raw,value=latest,enable={{is_default_branch}}
      - name: Build and push Docker image
        if: steps.files-changed-proxy.outputs.files_changed == 'true'
        uses: docker/build-push-action@v3
        with:
          context: proxy
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy to server
    needs: [image-backend, image-frontend, image-proxy]
    runs-on: ubuntu-latest
    steps:
      - name: Start application
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.DEPLOY_SSH_HOST }}
          username: ${{ secrets.DEPLOY_SSH_USERNAME }}
          key: ${{ secrets.DEPLOY_SSH_KEY }}
          port: ${{ secrets.DEPLOY_SSH_PORT }}
          script_stop: true
          script: |
            bash startDiveni.sh
