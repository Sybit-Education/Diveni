name: frontend

on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'frontend/**'
      - '!**.md'
  workflow_dispatch:

env:
  NODE_VERSION: 14

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Node.js dependencies
        working-directory: frontend
        run: npm ci
      - name: Run ESLint
        working-directory: frontend
        run: npm run lint:fix

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Install Node.js dependencies
        working-directory: frontend
        run: npm ci
      - name: Build
        working-directory: frontend
        run: npm run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: frontend/dist

  push-image:
    name: Frontend-Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository }}-frontend
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: frontend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
